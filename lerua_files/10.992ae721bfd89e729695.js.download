(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{55:function(n,t,s){"use strict";var e=s(14),i=s(19),o=s.n(i),c=s(20),r=s(22);function a(){const n=o()(["<slot></slot>"]);return a=function(){return n},n}function u(){const n=o()([":host {\n        --icon-size: 100%;\n        --icon-color: currentColor;\n\n        display: block;\n        width: var(--icon-size);\n        height: var(--icon-size);\n\n        font-size: 0;\n      }\n\n      :host,\n      ::slotted(*) {\n        fill: var(--icon-color);\n      }\n\n      ::slotted(*) {\n        width: 100%;\n        height: 100%;\n      }\n\n      :host([size='xxs']) {\n        --icon-size: ",";\n      }\n\n      :host([size='xs']) {\n        --icon-size: ",";\n      }\n\n      :host([size='s']) {\n        --icon-size: ",";\n      }\n\n      :host([size='m']) {\n        --icon-size: ",";\n      }\n\n      :host([size='l']) {\n        --icon-size: ",";\n      }"]);return u=function(){return n},n}const z={size:{type:String}};class h extends c.a{static get properties(){return z}static get styles(){return Object(c.b)(u(),Object(r.a)(8),Object(r.a)(12),Object(r.a)(16),Object(r.a)(24),Object(r.a)(32))}constructor(){super(),this.size="custom"}updated(n){if(n.has("size")){const n=parseInt(this.size,10);if(isNaN(n))return;this.style.setProperty("--icon-size","".concat(Object(r.a)(n)))}}render(){return Object(c.c)(a())}}Object(e.b)("uc-icon",h)}}]);